{"version":3,"sources":["App.js","rootReducer.js","combineReducers.js","serviceWorker.js","index.js","../node_modules/web3-eth-accounts/src sync"],"names":["Option","Select","Content","Layout","Header","Item","Form","Text","Typography","Title","Paragraph","networkConfigs","1","polymathRegistryAddress","42","15","message","config","duration","maxCount","top","formItemLayout","labelCol","xs","span","sm","wrapperCol","Network","networkId","toString","type","style","marginRight","marginLeft","0","User","walletAddress","App","useContext","Store","state","dispatch","AppReducer","sdk","loading","loadingMessage","reservations","error","useState","formSymbolValue","setFormSymbolValue","form","useForm","getFieldDecorator","resetFields","validateFields","a","reserveSecurityToken","symbol","q","run","success","e","preventDefault","force","then","values","reservation","filter","r","createSecurityToken","useEffect","browserUtils","getNetworkId","getCurrentAddress","includes","Polymath","connect","init","getSecurityTokenReservations","owner","isLaunched","launched","undefined","fetchReservations","spinning","tip","size","backgroundColor","display","flexDirection","justifyContent","alignItems","padding","closable","showIcon","colon","maxWidth","level","margin","name","label","placeholder","value","onChange","target","RegExp","test","length","toUpperCase","width","onClick","onSubmit","textAlign","marginBottom","rules","required","map","key","extra","max","initialValue","validator","rule","callback","web3Utils","isAddress","valuePropName","float","gutter","htmlType","rootReducer","reducers","action","hasChanged","nextState","Object","keys","reduce","result","combineReducers","console","log","Error","Boolean","window","location","hostname","match","initialState","createContext","ReactDOM","render","store","useReducer","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackEmptyContext","req","code","resolve","module","exports","id"],"mappings":"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","file":"static/js/main.85b99d06.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState, Fragment } from 'react'\nimport { Store } from './index'\nimport { Polymath, browserUtils } from '@polymathnetwork/sdk'\nimport { Layout, Spin, Form, Input, Button, Divider, Select, Switch, Icon, Typography, Alert, Row, Col, message } from 'antd'\nimport useForm from 'rc-form-hooks'\nimport { filter } from 'p-iteration'\nimport { utils as web3Utils } from 'web3'\n\nconst { Option } = Select\nconst { Content, Header } = Layout\nconst { Item } = Form\nconst { Text, Title, Paragraph } = Typography\n\nconst networkConfigs = {\n  1: {\n    polymathRegistryAddress: '0xdfabf3e4793cd30affb47ab6fa4cf4eef26bbc27'\n  },\n  42: {\n    polymathRegistryAddress: '0x5b215a7d39ee305ad28da29bf2f0425c6c2a00b3'\n  },\n  15: {\n    polymathRegistryAddress: '0x9FBDa871d559710256a2502A2517b794B482Db40'\n  }\n}\n\nmessage.config({\n  duration: 5,\n  maxCount: 1,\n  top: 150,\n})\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n}\n\nexport const reducer = (state, action) => {\n  console.log('ACTION', action)\n  switch (action.type) {\n  case 'INITALIZING':\n    return {\n      ...state,\n      loading: true,\n      loadingMessage: 'Initializing Polymath SDK',\n      error: undefined,\n    }\n  case 'INITIALIZED':\n    const { sdk, networkId, walletAddress } = action\n    return {\n      ...state,\n      loading: false,\n      loadingMessage: '',\n      error: undefined,\n      sdk,\n      networkId,\n      walletAddress\n    }\n  case 'FETCHING_RESERVATIONS':\n    return {\n      ...state,\n      loading: true,\n      loadingMessage: 'Fetching your previously reserved symbols',\n      error: undefined,\n    }\n  case 'RESERVING_SYMBOL':\n    return {\n      ...state,\n      loading: true,\n      loadingMessage: 'Reserving symbol'\n    }\n  case 'RESERVED_SYMBOL':\n    return {\n      ...state,\n      loading: true,\n      reservations: undefined,\n      loadingMessage: 'Refreshing reservations',\n    }\n  case 'CREATING_TOKEN':\n    return {\n      ...state,\n      loading: true,\n      loadingMessage: 'Creating token'\n    }\n  case 'CREATED_TOKEN':\n    return {\n      ...state,\n      loading: true,\n      reservations: undefined,\n      loadingMessage: 'Refreshing reservations',\n    }\n  case 'FETCHED_RESERVATIONS':\n    const { reservations } = action\n    return {\n      ...state,\n      loading: false,\n      loadingMessage: '',\n      error: undefined,\n      reservations\n    }\n  case 'ERROR':\n    const { error } = action\n    return {\n      ...state,\n      loading: false,\n      loadingMessage: '',\n      error,\n    }\n  default:\n    throw new Error(`Unrecognized action type: ${action.type}`)\n  }\n\n}\n\nfunction Network({networkId}) {\n  networkId = networkId.toString()\n  const networks = {\n    0: 'Disconnected',\n    1: 'Mainnet',\n    42: 'Kovan'\n  }\n  return (\n    <Fragment>\n      <Icon type=\"global\" style={{\n        marginRight: 10,\n        marginLeft: 20\n      }} />\n      <Text>{networks[networkId]}</Text>\n    </Fragment>\n  )\n}\n\nfunction User({walletAddress}) {\n  if (walletAddress)\n    return (\n      <Fragment>\n        <Icon type=\"user\"  style={{\n          marginRight: 5,\n          marginLeft: 10\n        }}/>\n        <Text>{walletAddress}</Text>\n      </Fragment>\n    )\n  return null\n}\n\nfunction App() {\n  const [state, dispatch] = useContext(Store)\n  const { sdk, loading, loadingMessage, reservations, walletAddress, error, networkId } = state.AppReducer\n  const [ formSymbolValue, setFormSymbolValue ] = useState('')\n\n  const form = useForm()\n  const { getFieldDecorator, resetFields, validateFields } = form\n  // Initialize the SDK.\n  useEffect(() => {\n    async function init() {\n      dispatch({type: 'INITALIZING'})\n\n      try {\n        const networkId = await browserUtils.getNetworkId()\n        const walletAddress = await browserUtils.getCurrentAddress()\n        if (![-1, 1, 42].includes(networkId)) {\n          dispatch({\n            type: 'ERROR',\n            error: 'Please switch to either Main or Kovan network'\n          })\n          return\n        }\n\n        const config = networkConfigs[networkId]\n        const sdk = new Polymath()\n        await sdk.connect(config)\n        dispatch({\n          type: 'INITIALIZED',\n          networkId,\n          sdk,\n          walletAddress,\n        })\n      }\n      catch(error) {\n        dispatch({\n          type: 'ERROR',\n          error: error.message\n        })\n      }\n    }\n    if (!sdk) {\n      init()\n    }\n  }, [dispatch, sdk])\n\n  // Fetch previous reservations if any.\n  useEffect(() => {\n    async function fetchReservations() {\n      dispatch({ type: 'FETCHING_RESERVATIONS' })\n      try {\n        let reservations = await sdk.getSecurityTokenReservations({owner: walletAddress })\n        reservations = await filter(reservations, async (reservation) => {\n          const launched = await reservation.isLaunched()\n          return !launched\n        })\n        dispatch({type: 'FETCHED_RESERVATIONS', reservations})\n      } catch (error) {\n        dispatch({type: 'ERROR', error: error.message})\n      }\n    }\n    if (sdk && walletAddress && reservations === undefined) {\n      fetchReservations()\n    }\n    // eslint-disable-next-line\n  }, [reservations, sdk, walletAddress])\n\n  // @TODO refactor into an effect\n  async function reserveSymbol() {\n    if (formSymbolValue) {\n      dispatch({type: 'RESERVING_SYMBOL'})\n      try {\n        const q = await sdk.reserveSecurityToken({symbol: formSymbolValue})\n        const ret = await q.run()\n        dispatch({type: 'RESERVED_SYMBOL'})\n        message.success(`Symbol ${formSymbolValue} has been reserved successfully!`)\n      } catch (error) {\n        dispatch({type: 'ERROR', error: error.message})\n      }\n    } else {\n      message.error('Please provide a symbol')\n    }\n  }\n\n  async function createToken(e) {\n    e.preventDefault()\n    const fields = ['symbol', 'name', 'detailsUrl', 'treasuryWallet', 'divisible']\n    validateFields(fields, { force: true })\n      .then(async (values) => {\n        dispatch({type: 'CREATING_TOKEN'})\n        const reservation = reservations.filter(r => r.symbol === values.symbol)[0]\n\n        try {\n          const q = await reservation.createSecurityToken(values)\n          const ret = await q.run()\n          dispatch({ type: 'CREATED_TOKEN'})\n          message.success(`Token ${reservation.symbol} has been created successfully!`)\n          resetFields()\n        }\n        catch (error) {\n          dispatch({ type: 'ERROR',\n            error: error.message} )\n        }\n      })\n  }\n\n  return (\n    <div>\n      <Spin spinning={loading} tip={loadingMessage} size=\"large\">\n        <Layout>\n          <Header style={{\n            backgroundColor: 'white',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            alignItems: 'center'\n          }}>\n            <Network networkId={networkId} />\n            <User walletAddress={walletAddress} />\n          </Header>\n          <Content style={{\n            padding: 50,\n            backgroundColor: '#FAFDFF'\n          }}>\n            {error && <Alert\n              message={error}\n              type=\"error\"\n              closable\n              showIcon\n            />}\n            <Form colon={false} style={{maxWidth: 600}} {...formItemLayout}>\n              <Title level={2} style={{margin: 25}}>Reserve Your Token Symbol</Title>\n              <Paragraph style={{margin: 25}}>Reservation ensures that no other organization can create a token symbol identical to yours using the Polymath platform. This operation carries a cost of: 250 POLY.</Paragraph>\n              <Item name=\"symbol\"\n                label=\"Symbol\">\n                <Input\n                  placeholder=\"SYMBOL\"\n                  value={formSymbolValue}\n                  onChange={({ target: { value }}) => {\n                    const pattern = RegExp('^[a-zA-Z0-9_-]*$')\n                    if (pattern.test(value) && value.length <= 10) {\n                      setFormSymbolValue(value.toUpperCase())\n                    }\n                  }}\n                />\n              </Item>\n              <Button type=\"primary\" style={{width: '100%'}} onClick={reserveSymbol}>Reserve Symbol</Button>\n            </Form>\n\n            <Divider />\n\n            {reservations &&\n              <Form colon={false} style={{maxWidth: 600}} {...formItemLayout}\n                onSubmit={createToken}>\n                <Title level={2} style={{margin: 25}}>Create Your Security Token</Title>\n                <Paragraph style={{margin: 25}}>Create your security token using one of your previous symbol reservations. If you let your token reservation expire, the token symbol you selected will be available for others to claim.</Paragraph>\n                <Item\n                  style={{textAlign: 'left', marginBottom: 25}}\n                  name=\"symbol\"\n                  label=\"Reservation\">\n                  {getFieldDecorator('symbol', {\n                    rules: [{required: true, message: 'A token reservation is required'}],\n                  })(<Select\n                    placeholder=\"Select a reservation\">\n                    {reservations.map(({symbol}) =>\n                      <Option key={symbol} value={symbol}>{symbol}</Option> )}\n                  </Select>)}\n                </Item>\n                <Item\n                  style={{textAlign: 'left', marginBottom: 25}}\n                  name=\"name\"\n                  label=\"Token Name\"\n                  extra=\"This is the name of your token for display purposes. For example: Toro Token\">\n                  {getFieldDecorator('name', {\n                    rules: [{required: true, message: 'Token name is required'}, {max: 64}],\n                  })(<Input placeholder=\"Enter Token Name\"/>)}\n                </Item>\n                <Item\n                  style={{textAlign: 'left', marginBottom: 25}}\n                  name=\"detailsUrl\"\n                  label=\"Token Details\"\n                  extra=\"Paste a link to a web page that includes additional information on your token, such as legend.\">\n                  {getFieldDecorator('detailsUrl', {initialValue: ''})(<Input placeholder=\"Paste link here\"/>)}\n                </Item>\n                <Item\n                  style={{textAlign: 'left', marginBottom: 25}}\n                  name=\"treasuryWallet\"\n                  label=\"Treasury Wallet Address\"\n                  extra=\"Address of a wallet to be used to store tokens for some operations. Defaults to current user (eg Token Issuer) address\">\n                  {getFieldDecorator('treasuryWallet', {initialValue: walletAddress,\n                    rules: [\n                      { required: true  },\n                      {\n                        validator: (rule, value, callback) => {\n                          if (!web3Utils.isAddress(value)) {\n                            callback('Address is invalid')\n                            return\n                          }\n                          callback()\n                          return\n                        }\n                      }\n                    ] })(<Input />)}\n                </Item>\n                <Item\n                  style={{textAlign: 'left', marginBottom: 25}}\n                  name=\"divisible\"\n                  label=\"Divisible\"\n                  extra=\"Indivisible tokens are typically used to represent an equity, while divisible tokens may be used to represent divisible assets such as bonds. Please connect with your advisor to select the best option..\">\n                  {getFieldDecorator('divisible', {\n                    initialValue: false,\n                    valuePropName: 'checked',\n                  })(<Switch style={{float: 'left'}} />)}\n                </Item>\n\n                <div style={{width: '100%'}}>\n                  <Row gutter={16}>\n                    <Col span={12}><Button style={{width: '100%'}} htmlType=\"reset\" onClick={() => resetFields()}>\n                    Reset fields\n                    </Button></Col>\n                    <Col span={12}> <Button type=\"primary\" style={{width: '100%'}} htmlType=\"submit\">\n                      Create my token\n                    </Button></Col>\n                  </Row>\n                </div>\n              </Form>\n            }\n          </Content>\n        </Layout>\n      </Spin>\n    </div>\n  )\n}\n\nexport default App\n","import combineReducers from './combineReducers'\nimport { reducer as AppReducer } from './App'\nconst rootReducer = combineReducers({AppReducer})\n\nexport default rootReducer","/**\n * @see https://codesandbox.io/s/rm7587n34m?from-embed\n *\n * A size-optimized refactor of Redux's combineReducers.\n * All safeguards removed. Use at your own risk.\n * https://github.com/reduxjs/redux/blob/master/src/combineReducers.js\n */\n\nconst combineReducers = reducers => (state, action) => {\n  let hasChanged\n  const nextState = Object.keys(reducers).reduce((result, key) => {\n    result[key] = reducers[key](state[key], action)\n    hasChanged = hasChanged || result[key] !== state[key]\n    return result\n  }, {})\n  return hasChanged ? nextState : state\n}\n\nexport default combineReducers\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {createContext, useReducer} from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport rootReducer from './rootReducer'\nimport * as serviceWorker from './serviceWorker'\n\nconst initialState = {\n  AppReducer: {\n    sdk: undefined,\n    loading: false,\n    loadingMessage: '',\n    error: undefined,\n    networkId: -1,\n    walletAddress: '',\n    reservations: undefined\n  }\n}\n\nexport const Store = createContext()\nconst WrappedApp = () => {\n  const store = useReducer(rootReducer, initialState)\n  return (<Store.Provider value={store}><App /></Store.Provider>)\n}\n\nReactDOM.render(<WrappedApp />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 969;"],"sourceRoot":""}